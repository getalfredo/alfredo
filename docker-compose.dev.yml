x-laravel-app: &laravel-base
    image: ghcr.io/getalfredo/alfredo:${TAG:-latest}
    build:
        context: .
        dockerfile: ./docker/Dockerfile
        target: development
        args:
            # 501 and 20 are the defaults on macOS. Run `./run compose:build-with-ids`
            # to build with the current user and group IDs.
            USER_ID: ${USER_ID:-501}
            GROUP_ID: ${GROUP_ID:-20}
    environment:
        SSL_MODE: "off"
        AUTORUN_LARAVEL_STORAGE_LINK: "true"
        AUTORUN_LARAVEL_MIGRATION: "false"
    networks:
        - web
    extra_hosts:
        - 'host.docker.internal:host-gateway'
        - 'local-vm:${LOCAL_SERVER_IP}'
    volumes:
        - .:/var/www/html
        - ./docker/ansible.cfg:/etc/ansible/ansible.cfg

services:
    webapp:
        <<: *laravel-base
        ports:
            - "${APP_PORT:-8080}:8080"
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'

#    queue:
#        <<: *laravel-base
#        command: [ "php", "/var/www/html/artisan", "queue:listen" ]
#        stop_signal: SIGTERM
#        healthcheck:
#            test: [ "CMD", "healthcheck-queue" ]
#            start_period: 10s

#    scheduler:
#        <<: *laravel-base
#        command: [ "php", "/var/www/html/artisan", "schedule:work" ]
#        stop_signal: SIGTERM
#        healthcheck:
#            test: [ "CMD", "healthcheck-schedule" ]
#            start_period: 10s

    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'pgsql:/var/lib/postgresql/data'
            - './docker/database/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - web
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s

networks:
    web:
        driver: bridge

volumes:
    pgsql:
        driver: local
